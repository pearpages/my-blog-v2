(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{178:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return b}));var a=t(3),r=t(7),o=(t(0),t(231)),l={slug:"mysql-with-docker",title:"MySQL database with Docker",author:"pere pages",author_image_url:"https://avatars2.githubusercontent.com/u/3802915?s=400&v=4",tags:["web","docker"]},c={permalink:"/mysql-with-docker",editUrl:"https://github.com/pearpages/my-blog/edit/master/blog/2021-01-10-mysql-with-docker.md",source:"@site/blog/2021-01-10-mysql-with-docker.md",description:"Installing an image",date:"2021-01-10T00:00:00.000Z",tags:[{label:"web",permalink:"/tags/web"},{label:"docker",permalink:"/tags/docker"}],title:"MySQL database with Docker",readingTime:5.95,truncated:!1,prevItem:{title:"Async functions and useEffect",permalink:"/async-functions-with-use-effect"},nextItem:{title:"Docker core concepts",permalink:"/docker-core-concepts"}},i=[{value:"Installing an image",id:"installing-an-image",children:[]},{value:"Launching the container",id:"launching-the-container",children:[]},{value:"Most used options",id:"most-used-options",children:[]},{value:"Connect to the database using <code>Adminer</code> Mysql Client",id:"connect-to-the-database-using-adminer-mysql-client",children:[]},{value:"Connect to a container shell",id:"connect-to-a-container-shell",children:[]},{value:"List, pause/unpause, stop and restart containers",id:"list-pauseunpause-stop-and-restart-containers",children:[{value:"List",id:"list",children:[]},{value:"Restart",id:"restart",children:[]},{value:"Pause/Unpause",id:"pauseunpause",children:[]},{value:"Stop",id:"stop",children:[]},{value:"Remove",id:"remove",children:[]}]},{value:"Define a Docker network",id:"define-a-docker-network",children:[]},{value:"Cleaning up",id:"cleaning-up",children:[{value:"Statistics",id:"statistics",children:[]},{value:"List containers, images, volmes and networks",id:"list-containers-images-volmes-and-networks",children:[]},{value:"Remove unused networks and images",id:"remove-unused-networks-and-images",children:[]},{value:"Deleting disk volumes",id:"deleting-disk-volumes",children:[]},{value:"Full clean start",id:"full-clean-start",children:[]}]},{value:"Launch multiple containers with Docker Compose",id:"launch-multiple-containers-with-docker-compose",children:[{value:"Running on the background",id:"running-on-the-background",children:[]},{value:"Stop",id:"stop-1",children:[]}]}],s={toc:i};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"installing-an-image"},"Installing an image"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"# latest\ndocker pull mysql\n# or any version using semantic versioning\ndocker pull mysql:8.0.22\n")),Object(o.b)("h2",{id:"launching-the-container"},"Launching the container"),Object(o.b)("p",null,"All Docker CLI commands start with ",Object(o.b)("inlineCode",{parentName:"p"},"docker")," and an instruction such as ",Object(o.b)("inlineCode",{parentName:"p"},"run")," followed by options. ",Object(o.b)("inlineCode",{parentName:"p"},"docker run")," creates a container from a specified image ( ",Object(o.b)("inlineCode",{parentName:"p"},"mysql")," ) and starts it. That image is downloaded if it\u2019s not already available on the host."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},'docker run \\\n  -it --rm --name mysql \\\n  -p 3306:3306 \\\n  --mount "src=mysqldata,target=/var/lib/mysql" \\\n  -e MYSQL_ROOT_PASSWORD=mysecret \\\n  mysql\n')),Object(o.b)("p",null,"The command runs the container in the foreground, removes it at the end, gives it a name of ",Object(o.b)("em",{parentName:"p"},"mysql")," maps the port 3306 of the host to the 3306 of the container, mounts a volume with the name mysqldata and sets an environment variable called MSQL_ROOT_PASSWORD."),Object(o.b)("p",null,"Once the database container has started, you can use any MySQL client application installed on your host PC to connect to ",Object(o.b)("inlineCode",{parentName:"p"},"localhost:3306")," with the user ID ",Object(o.b)("inlineCode",{parentName:"p"},"root")," and password ",Object(o.b)("inlineCode",{parentName:"p"},"mysecret"),"."),Object(o.b)("h2",{id:"most-used-options"},"Most used options"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"option"),Object(o.b)("th",{parentName:"tr",align:null},"description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"-d"),Object(o.b)("td",{parentName:"tr",align:null},"run a container as a ",Object(o.b)("strong",{parentName:"td"},"background")," process (which exits when the application ends)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"-it"),Object(o.b)("td",{parentName:"tr",align:null},"Interactive mode. It keeps a container running in the ",Object(o.b)("strong",{parentName:"td"},"foreground")," (even after the application ends), and show an activity log")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--rm"),Object(o.b)("td",{parentName:"tr",align:null},"remove the container after it stops")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--name"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("strong",{parentName:"td"},"name")," a container (a random GUID is used otherwise)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"-p"),Object(o.b)("td",{parentName:"tr",align:null},"map a ",Object(o.b)("em",{parentName:"td"},"host")," ",Object(o.b)("strong",{parentName:"td"},"port")," to a ",Object(o.b)("em",{parentName:"td"},"container")," port")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--mount"),Object(o.b)("td",{parentName:"tr",align:null},"create a ",Object(o.b)("strong",{parentName:"td"},"persistent")," Docker-managed ",Object(o.b)("strong",{parentName:"td"},"volume")," to retain data. The string specifies a src volume ",Object(o.b)("strong",{parentName:"td"},"name")," and a ",Object(o.b)("strong",{parentName:"td"},"target")," where it is mounted in the container\u2019s file system")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"-v"),Object(o.b)("td",{parentName:"tr",align:null},"mount a host ",Object(o.b)("strong",{parentName:"td"},"folder")," using the notation ",Object(o.b)("inlineCode",{parentName:"td"},"<hostdir>:<containerdir>"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"-e"),Object(o.b)("td",{parentName:"tr",align:null},"define an ",Object(o.b)("strong",{parentName:"td"},"environment variable"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--env-file"),Object(o.b)("td",{parentName:"tr",align:null},"read ",Object(o.b)("strong",{parentName:"td"},"environment variables from a file")," where each line defines a VAR=value")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--net"),Object(o.b)("td",{parentName:"tr",align:null},"connect to specific ",Object(o.b)("strong",{parentName:"td"},"Docker network"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"--entrypoint"),Object(o.b)("td",{parentName:"tr",align:null},"overrides the default starting application")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"If you do not specify ",Object(o.b)("inlineCode",{parentName:"p"},"--rm")," , the container will remain available even once it has stopped. Although it is possible to restart it, there\u2019s rarely any benefit \u2013 it\u2019s simpler to execute the same ",Object(o.b)("inlineCode",{parentName:"p"},"docker run")," command again.")),Object(o.b)("h2",{id:"connect-to-the-database-using-adminer-mysql-client"},"Connect to the database using ",Object(o.b)("inlineCode",{parentName:"h2"},"Adminer")," Mysql Client"),Object(o.b)("p",null,"If you don\u2019t have a MySQL client to hand, ",Object(o.b)("strong",{parentName:"p"},"Adminer")," is a lightweight PHP-based option. It is also available as a ",Object(o.b)("strong",{parentName:"p"},"Docker image")," and can be launched in another terminal with:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n  -it --rm --name adminer \\\n  -p 8080:8080 \\\n  adminer\n")),Object(o.b)("p",null,"The image will be downloaded automatically, otherwise you can install it as shown previously."),Object(o.b)("p",null,"Now you can type in the browser ",Object(o.b)("inlineCode",{parentName:"p"},"http://localhost:8080"),"."),Object(o.b)("p",null,"Note that you ",Object(o.b)("strong",{parentName:"p"},"cannot")," use ",Object(o.b)("inlineCode",{parentName:"p"},"localhost"),"as the server name since Adminer will resolve that to its own container! Instead these are the options:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Enter ",Object(o.b)("inlineCode",{parentName:"li"},"host.docker.internal"),". Docker Desktop routes this domain to your PC's network IP address, but ",Object(o.b)("strong",{parentName:"li"},"it may not be available on all systems"),"."),Object(o.b)("li",{parentName:"ol"},"Use your actual network IP address. This can be obtained with the ``\xecfconfig``` command on macOS."),Object(o.b)("li",{parentName:"ol"},"Or us the container's IP address assigned by Docker. Docker creates it's own virtual network. ",Object(o.b)("inlineCode",{parentName:"li"},"docker inspect mysql"),"returns information about the container in JS_ON format. You can locate the 'IPAddress' value suing the ",Object(o.b)("inlineCode",{parentName:"li"},"-f")," format option.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker inspect \\\n  -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \\\n  mysql\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Alternatively, you can define a Docker network which containers can connect to. Any container can then use the name of another container name and have it resolve correctly, i.e. you can enter ",Object(o.b)("inlineCode",{parentName:"p"},"mysql")," as the server name on the Adminer login screen.")),Object(o.b)("h2",{id:"connect-to-a-container-shell"},"Connect to a container shell"),Object(o.b)("p",null,"Every Docker container runs an isolated Linux environment. You can connect to its shell to run commands, examine logs, or perform any other activities."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Remember containers are stateless! Any changes you make will be lost whenever the container is restarted.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"# Presuming your MySQL container is still running, open another terminal and enter\ndocker exec -it mysql bash\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Some lightweight images using ",Object(o.b)("strong",{parentName:"p"},"Alpine")," Linux do not offer the ",Object(o.b)("inlineCode",{parentName:"p"},"bash")," shell. If this command fails, try using ",Object(o.b)("inlineCode",{parentName:"p"},"docker exec -it mysql sh")," instead.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"mysql -u root -pmysecret\n")),Object(o.b)("p",null,"Enter ",Object(o.b)("inlineCode",{parentName:"p"},"exit")," to quit the shell."),Object(o.b)("h2",{id:"list-pauseunpause-stop-and-restart-containers"},"List, pause/unpause, stop and restart containers"),Object(o.b)("h3",{id:"list"},"List"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container ls\n# or\ndocker ps\n")),Object(o.b)("p",null,"Each container is assigned a ",Object(o.b)("strong",{parentName:"p"},"hexadecimal ID")," which can be used as a reference in Docker commands. However, specifying a container ",Object(o.b)("inlineCode",{parentName:"p"},"--name")," makes management considerably easier."),Object(o.b)("p",null,"To view all containers, both running and stopped, enter:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container ls -a\n")),Object(o.b)("h3",{id:"restart"},"Restart"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container restart adminer mysql\n")),Object(o.b)("h3",{id:"pauseunpause"},"Pause/Unpause"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container pause mysql\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container unpause mysal\n")),Object(o.b)("h3",{id:"stop"},"Stop"),Object(o.b)("p",null,"Containers which stared with the ",Object(o.b)("inlineCode",{parentName:"p"},"-rm")," option are removed when they are stopped. You can list all containers with ",Object(o.b)("inlineCode",{parentName:"p"},"docker ps -a"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container stop adminer mysql\n")),Object(o.b)("h3",{id:"remove"},"Remove"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container prune\n")),Object(o.b)("h2",{id:"define-a-docker-network"},"Define a Docker network"),Object(o.b)("p",null,"Generally it is easier to refer to another container using its ",Object(o.b)("inlineCode",{parentName:"p"},"--name"),"then its ",Object(o.b)("inlineCode",{parentName:"p"},"IP"),"."),Object(o.b)("p",null,"Stop any running containers then create a new network, e.g. named ",Object(o.b)("inlineCode",{parentName:"p"},"mysqlnet")," here:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker network create --driver bridge mysqlnet\n")),Object(o.b)("p",null,"Any container can connect to this network using the ",Object(o.b)("inlineCode",{parentName:"p"},"--net")," option when it is launched."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash",metastring:"{6}","{6}":!0},'docker run \\\n  -d --rm --name mysql \\\n  -p 3306:3306 \\\n  --mount "src=mysqldata,target=/var/lib/mysql" \\\n  -e MYSQL_ROOT_PASSWORD=mysecret \\\n  --net mysqlnet \\\n  mysql\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash",metastring:"{4}","{4}":!0},"docker run \\\n  -d --rm --name adminer \\\n  -p 8080:8080 \\\n  --net mysqlnet \\\n  adminer\n")),Object(o.b)("p",null,"Each container\u2019s name now resolves on the Docker ",Object(o.b)("inlineCode",{parentName:"p"},"mysqlnet")," network. You can therefore enter ",Object(o.b)("inlineCode",{parentName:"p"},"mysql")," as the server name on the Adminer login screen."),Object(o.b)("h2",{id:"cleaning-up"},"Cleaning up"),Object(o.b)("h3",{id:"statistics"},"Statistics"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker system df\n")),Object(o.b)("h3",{id:"list-containers-images-volmes-and-networks"},"List containers, images, volmes and networks"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker container ls -a\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker image ls -a\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker volume ls\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker network ls\n")),Object(o.b)("h3",{id:"remove-unused-networks-and-images"},"Remove unused networks and images"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker system prune\n")),Object(o.b)("p",null,"The following command will do the same and also wipe any image not associated with a running container:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker system prune -a\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"The latest images will therefore have to be downloaded again if you require them.")),Object(o.b)("h3",{id:"deleting-disk-volumes"},"Deleting disk volumes"),Object(o.b)("p",null,"Assuming you\u2019re happy to proceed, you can view Docker volumes with:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker volume ls\n")),Object(o.b)("p",null,"then delete any by ID or name:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker volume rm <name>\n")),Object(o.b)("p",null,"Unused Docker volumes \u2013those not currently attached to a running container\u2013 can be removed with:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker volume prune\n")),Object(o.b)("p",null,"Alternatively, use ",Object(o.b)("inlineCode",{parentName:"p"},"docker volume prune -a")," will delete them all. You only have yourself to blame!..."),Object(o.b)("h3",{id:"full-clean-start"},"Full clean start"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker system prune -a --volumes\n")),Object(o.b)("p",null,"Add ",Object(o.b)("inlineCode",{parentName:"p"},"-f")," if you want to force the wipe without a confirmation prompt."),Object(o.b)("h2",{id:"launch-multiple-containers-with-docker-compose"},"Launch multiple containers with Docker Compose"),Object(o.b)("p",null,"Docker Compose provides a way to build and launch containers, networks, and volumes from a single configuration file named ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose.yml"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml",metastring:"{14,18,24}","{14,18,24}":!0},'version: \'3\'\nservices:\n  mysql:\n    image: mysql\n    container_name: mysql\n    environment:\n      - MYSQL_ROOT_PASSWORD=mysecret\n    volumes:\n      - mysqldata:/var/lib/mysql\n    ports:\n      - "3306:3306"\n    networks:\n      - mysqlnet\n    restart: on-failure\n  adminer:\n    image: adminer\n    container_name: adminer\n    depends_on:\n      - mysql\n    ports:\n      - "8080:8080"\n    networks:\n      - mysqlnet\n    restart: on-failure\nvolumes:\n  mysqldata:\nnetworks:\n  mysqlnet:\n')),Object(o.b)("p",null,"Now launch Docker Compose from the same directory as your ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file using:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker-compose up\n")),Object(o.b)("h3",{id:"running-on-the-background"},"Running on the background"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),Object(o.b)("h3",{id:"stop-1"},"Stop"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker compose stop\n")))}b.isMDXComponent=!0},231:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),b=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=b(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=b(t),d=a,u=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return t?r.a.createElement(u,c(c({ref:n},s),{},{components:t})):r.a.createElement(u,c({ref:n},s))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=t[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);